#!/bin/sh -x

echo "PLD New Rescue booting"

export PATH=/sbin:/bin

mount -t proc proc /proc
mount -t sysfs sysfs /sys

mkdir -p /root
mount -t tmpfs none /root

mkdir -p /.rcd/modules
mv *.sqf /.rcd/modules

mkdir -p /root/dev
cp -a /dev/* /root/dev
mount --bind /root/dev /dev

for dir in tmp run ; do
        mkdir -p /root/$dir
	mount --bind /root/$dir /$dir
done

modprobe loop

echo "Starting udevd"
mkdir -p /run/udev
udevd --daemon
udevadm trigger --type=subsystems --action=add
udevadm trigger --type=devices --action=add

echo "Waiting for udev to setlle"
udevadm settle

blkid

OFFSET=0
SQF=/.rcd/modules/base.sqf

modprobe squashfs
lodev=$(/sbin/losetup -o $OFFSET --find --show $SQF)
mkdir -p /.rcd/m/base
mount -t squashfs $lodev /.rcd/m/base

for dir in var ; do
 if [ -d /$dir ] ;  then
    cp -a /$dir /root/$dir
 else
    mkdir -p /root/$dir
 fi
 if [ -d /.rcd/m/base/$dir ] ;  then
     cd /.rcd/m/base/$dir
     find | cpio -p /root/$dir
     cd /
 fi
done

modprobe aufs

mkdir /root/.rw

for dir in boot usr sbin lib lib64 etc bin opt ; do
 if [ -d /.rcd/m/base/$dir ] ;  then
      mkdir -p /root/.rw/$dir /root/$dir
      if [ -d /$dir ] ; then
        mount -t aufs -o dirs=/root/.rw/$dir:/.rcd/m/base/$dir=rr:/$dir=ro none /root/$dir
      else
        mount -t aufs -o dirs=/root/.rw/$dir:/.rcd/m/base/$dir=rr none /root/$dir
      fi
  fi
done

udevadm control --exit

for dir in tmp run dev ; do
    umount /$dir
done

cd /root
mkdir old-root
pivot_root . ./old-root
exec usr/sbin/chroot . /sbin/init

# vi: ft=sh sw=4 sts=4 et
