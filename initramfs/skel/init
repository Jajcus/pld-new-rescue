#!/bin/sh

. /variables.sh
. /functions.sh

echo "PLD New Rescue booting"

export PATH=/sbin:/bin:/usr/sbin:/usr/bin

mount -t proc proc /proc
mount -t sysfs sysfs /sys

c_init=/sbin/init

eval $(parse_cmdline $(cat /proc/cmdline))

if [ "$c_pldnr_debug" = "yes" ] ; then
    set -x
fi

if [ -n "$c_pldnr_modules" ] ; then
    modules="$(echo "$c_pldnr_modules" | tr "," " ")"
fi

mkdir -p /root
mount -t tmpfs none /root

mv *.sqf /.rcd/modules 2>/dev/null

mkdir -p /root/dev /root/proc /root/sys
mount -t devtmpfs none /root/dev
mount --bind /root/dev /dev

for dir in tmp run ; do
        mkdir -p /root/$dir
	mount --bind /root/$dir /$dir
done

modprobe loop
modprobe usb-storage

echo "Starting udevd"
mkdir -p /run/udev
udevd --daemon
udevadm trigger --type=subsystems --action=add
udevadm trigger --type=devices --action=add

echo "Waiting for udev to setlle"
udevadm settle

modprobe squashfs
modprobe aufs

mount_media

mount_aufs

for module in $modules ; do
    load_module "$module"
done

keymap=${c_pldnr_keymap:-$default_keymap}
if [ -n "$keymap" ] ; then
    echo "KEYMAP=$keymap" >> root/etc/vconsole.conf
fi
font=${c_pldnr_font:-$default_font}
if [ -n "$font" ] ; then
    echo "FONT=$font" >> root/etc/vconsole.conf
fi

if [ ! -x "/root/$c_init" ] ; then
    echo "Something went wrong, init binary ($c_init) not found under /root"
    echo "Kernel will panic, so dropping to shell"
    /bin/sh
fi

if [ -n "$c_ip" -a "$c_ip" != "off" -a "$c_ip" != "none" ] ; then
    setup_network
fi

umount_media

udevadm control --exit

for dir in tmp run dev ; do
    umount /$dir
done

rm -f /.rcd/modules/* 2>/dev/null

cat /fstab-add >> /root/etc/fstab
rm /fstab-add

cd /root
mount --move . /
exec chroot . "$c_init"

# vi: ft=sh sw=4 sts=4 et
